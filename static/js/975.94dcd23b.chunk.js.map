{"version":3,"file":"static/js/975.94dcd23b.chunk.js","mappings":"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","sources":["Api/api.ts","Api/utils.ts","Components/Detail/HomeDetail.tsx","Components/Home/UpcomingSlider.tsx","Components/Home/TVSlider.tsx","Components/Home/Home.tsx","Recoil/Atom.ts","Styles/Back.tsx","Styles/Loading.tsx"],"sourcesContent":["const API_KEY = process.env.REACT_APP_KEY;\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport interface RouterID {\r\n  state: {\r\n    id: number;\r\n  };\r\n}\r\n\r\nexport interface IMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n  release_date: string;\r\n  vote_average: string;\r\n}\r\n\r\nexport interface ITV {\r\n  id: number;\r\n  backdrop_path: string;\r\n  original_name: string;\r\n  overview: string;\r\n  vote_average: number;\r\n  poster_path: string;\r\n  first_air_date: string;\r\n}\r\n\r\ninterface ISearch {\r\n  backdrop_path: string;\r\n  id: number;\r\n  original_title: string;\r\n  poster_path: string;\r\n  first_air_date: string;\r\n  vote_average: number;\r\n  media_type: string;\r\n  name: string;\r\n}\r\n\r\ninterface IMovieTrailer {\r\n  key: string;\r\n  id: string;\r\n}\r\n\r\ninterface ITVTrailer {\r\n  key: string;\r\n  id: string;\r\n}\r\n\r\ninterface IGenres {\r\n  name: string;\r\n}\r\n\r\ninterface ICompanies {\r\n  logo_path: string;\r\n}\r\n\r\ninterface ILanguages {\r\n  name: string;\r\n}\r\n\r\nexport interface IGetMoviesResult {\r\n  results: IMovie[];\r\n}\r\n\r\nexport interface IGetMoviesDetail {\r\n  adult: boolean;\r\n  backdrop_path: string;\r\n  homepage: string;\r\n  original_title: string;\r\n  overview: string;\r\n  poster_path: string;\r\n  release_date: string;\r\n  runtime: number;\r\n  vote_average: number;\r\n  genres: IGenres[];\r\n  production_companies: ICompanies[];\r\n  spoken_languages: ILanguages[];\r\n}\r\n\r\nexport interface IGetMoviesTrailer {\r\n  id: number;\r\n  results: IMovieTrailer[];\r\n}\r\n\r\nexport interface IGetTVResult {\r\n  page: number;\r\n  results: ITV[];\r\n}\r\n\r\nexport interface IGetTVDetail {\r\n  adult: boolean;\r\n  backdrop_path: string;\r\n  homepage: string;\r\n  id: number;\r\n  original_name: string;\r\n  overview: string;\r\n  poster_path: string;\r\n  first_air_date: string;\r\n  vote_average: number;\r\n}\r\n\r\nexport interface IMoiveSimilar {\r\n  backdrop_path: string;\r\n  original_title: string;\r\n}\r\n\r\nexport interface IGetTVTrailer {\r\n  results: ITVTrailer[];\r\n}\r\n\r\nexport interface IGetSearchResult {\r\n  results: ISearch[];\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetMovieSimilar {\r\n  results: IMoiveSimilar[];\r\n}\r\n\r\nexport const getMovies = async () => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/movie/popular?api_key=${API_KEY}&page=1`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const getMoviesDetail = async (movieId?: string) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=ko-KR`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const getMoviesTrailer = async (movieId?: string) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const getUpcoming = async (number?: number) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/movie/upcoming?api_key=${API_KEY}&page=${number}`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const getTv = async (number?: number) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/tv/popular?api_key=${API_KEY}&page=${number}`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const getTVDetail = async (tvId?: string) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/tv/${tvId}?api_key=${API_KEY}&language=ko-KR`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const getTvTrailer = async (tvId?: string) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/tv/${tvId}/videos?api_key=${API_KEY}`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const getSearch = async (query?: string) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/search/multi?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport const getMovieSimilar = async (movieId?: string) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/movie/${movieId}/similar?api_key=${API_KEY}&page=1`\r\n  );\r\n  return await response.json();\r\n};\r\n","export function makeImagePath(id: string) {\r\n  return `https://image.tmdb.org/t/p/w500/${id}`;\r\n}\r\n\r\nexport function makeTrailerPath(key?: string) {\r\n  return `https://www.youtube.com/embed/${key}?showinfo=0&enablejsapi=1&origin=http://localhost:3000`; //localhost 제거\r\n}\r\n\r\nexport const NothingPoster =\r\n  \"https://user-images.githubusercontent.com/79081800/150473965-fbc32c06-12b2-4b22-8c75-fba34e923475.jpg\";\r\n","import { motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useMatch, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getMoviesDetail,\r\n  getMovieSimilar,\r\n  getMoviesTrailer,\r\n  IGetMoviesDetail,\r\n  IGetMovieSimilar,\r\n  IGetMoviesTrailer,\r\n} from \"../../Api/api\";\r\nimport { makeImagePath, makeTrailerPath, NothingPoster } from \"../../Api/utils\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport VolumeUpIcon from \"@mui/icons-material/VolumeUp\";\r\nimport VolumeOffIcon from \"@mui/icons-material/VolumeOff\";\r\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\r\nimport Loading from \"../../Styles/Loading\";\r\nimport { Button } from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\n\r\nconst Container = styled(motion.div)`\r\n  width: 100%;\r\n  height: 100vh;\r\n  color: white;\r\n`;\r\n\r\nconst DetailPoster = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst DetailPlayContainer = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Banner = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  background: linear-gradient(\r\n    rgba(0, 0, 0, 0.7),\r\n    rgba(0, 0, 0, 0.3),\r\n    rgba(0, 0, 0, 0.6)\r\n  );\r\n  position: absolute;\r\n  top: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst BannerBackContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst BannerBackBox = styled.div`\r\n  width: 95%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  z-index: 10;\r\n  position: absolute;\r\n`;\r\n\r\nconst BannerBack = styled(motion.div)`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 0;\r\n  background-color: #2c3e50;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst BannerFooterBox = styled.footer`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst BannerFooter = styled.footer`\r\n  width: 95%;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst BannerPlayBtn = styled.button`\r\n  width: 150px;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  border: 0;\r\n`;\r\n\r\nconst BannerVolum = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: 0;\r\n  background-color: #9ca7b2;\r\n`;\r\n\r\nconst DetailBanner = styled.div<{ bgimg?: string }>`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgimg});\r\n  background-position: center;\r\n`;\r\n\r\nconst OverviewContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 300px;\r\n  background: linear-gradient(\r\n    rgba(0, 0, 0, 0.95),\r\n    rgba(0, 0, 0, 0.7),\r\n    rgba(0, 0, 0, 0.9)\r\n  );\r\n`;\r\n\r\nconst TitleContainer = styled.header`\r\n  width: 100%;\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 40px;\r\n`;\r\n\r\nconst Explanation = styled.div`\r\n  width: 95%;\r\n  height: 100px;\r\n  display: flex;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst OverviewBox = styled.div`\r\n  width: 70%;\r\n  height: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: space-between;\r\n  margin-right: 3px;\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n    border-radius: 50px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: linear-gradient(#e0eafc, #cfdef3);\r\n    border-radius: 50px;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.span`\r\n  height: initial;\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ReleaseContainer = styled.div`\r\n  width: 95%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 30%;\r\n  height: 250px;\r\n`;\r\n\r\nconst WrapperColor = styled.div`\r\n  background-color: #e6e6e6;\r\n  border-radius: 20px;\r\n  color: black;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst GenresContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Companies = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  display: flex;\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst LogoPath = styled.div<{ bgimg: string }>`\r\n  width: 100px;\r\n  height: 40px;\r\n  background-image: url(${(prop) => prop.bgimg});\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  margin: 10px;\r\n`;\r\n\r\nconst SemiContainer = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 300px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n  border-top: 2px solid gray;\r\n`;\r\n\r\nconst SemiHeader = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  span {\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst SemiBox = styled.div`\r\n  width: 90%;\r\n  height: 90%;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 30px;\r\n`;\r\n\r\nconst Similar = styled(motion.div)<{ bgimg: string }>`\r\n  background-image: url(${(prop) => prop.bgimg});\r\n  background-position: center;\r\n  background-size: cover;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst HomeDetail = () => {\r\n  const movieMatch = useMatch(`/movies/:movieId`);\r\n  const navigate = useNavigate();\r\n  const [volum, setVolum] = useState(false);\r\n  const { isLoading, data } = useQuery<IGetMoviesTrailer>(\"Movietrailer\", () =>\r\n    getMoviesTrailer(movieMatch?.params.movieId)\r\n  );\r\n  const { data: info } = useQuery<IGetMoviesDetail>(\"MovieDetail\", () =>\r\n    getMoviesDetail(movieMatch?.params.movieId)\r\n  );\r\n  const { data: similar } = useQuery<IGetMovieSimilar>(\"MovieSimilar\", () =>\r\n    getMovieSimilar(movieMatch?.params.movieId)\r\n  );\r\n  const onClick = () => {\r\n    navigate(\"/movies\");\r\n  };\r\n  const volumClick = () => setVolum((prev) => !prev);\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          {movieMatch && (\r\n            <DetailPoster>\r\n              <DetailPlayContainer>\r\n                <ReactPlayer\r\n                  url={makeTrailerPath(data?.results[0].key)}\r\n                  volume={volum ? 0.2 : 0}\r\n                  playing={true}\r\n                  loop={true}\r\n                  width=\"150%\"\r\n                  height=\"600px\"\r\n                  style={{ scale: 1.5 }}\r\n                ></ReactPlayer>\r\n                <Banner>\r\n                  <BannerBackContainer>\r\n                    <BannerBackBox>\r\n                      <BannerBack\r\n                        onClick={onClick}\r\n                        whileHover={{ rotate: \"90deg\" }}\r\n                      >\r\n                        <CancelIcon fontSize=\"large\"></CancelIcon>\r\n                      </BannerBack>\r\n                    </BannerBackBox>\r\n                  </BannerBackContainer>\r\n                  <BannerFooterBox>\r\n                    <BannerFooter>\r\n                      <BannerPlayBtn\r\n                        onClick={() => alert(\"로그인 후 이용 가능합니다.\")}\r\n                      >\r\n                        <DoubleArrowIcon />\r\n                        Play\r\n                      </BannerPlayBtn>\r\n                      <BannerVolum onClick={volumClick}>\r\n                        {volum ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n                      </BannerVolum>\r\n                    </BannerFooter>\r\n                  </BannerFooterBox>\r\n                </Banner>\r\n              </DetailPlayContainer>\r\n              <DetailBanner\r\n                bgimg={\r\n                  info?.backdrop_path === null\r\n                    ? NothingPoster\r\n                    : makeImagePath(info?.backdrop_path || \"\")\r\n                }\r\n              />\r\n              <OverviewContainer>\r\n                <TitleContainer>\r\n                  <Title>{info?.original_title}</Title>\r\n                </TitleContainer>\r\n                <ReleaseContainer>\r\n                  <span>{info?.release_date} / </span>\r\n                  <span>\r\n                    <Stack spacing={1}>\r\n                      <Rating\r\n                        name=\"half-rating-read\"\r\n                        defaultValue={\r\n                          info?.vote_average === undefined\r\n                            ? 3.0\r\n                            : Math.floor(Number(info?.vote_average))\r\n                        }\r\n                        precision={0.5}\r\n                        readOnly\r\n                        size=\"small\"\r\n                      />\r\n                    </Stack>\r\n                  </span>\r\n                  <span>&nbsp;{info?.runtime}min / </span>\r\n                  <span>&nbsp;{info?.spoken_languages[0].name}</span>\r\n                  <span style={{ color: \"red\" }}>\r\n                    &nbsp;{info?.adult ? \"/ 청소년 관람불가\" : \"\"}\r\n                  </span>\r\n                  <a href={info?.homepage} target=\"_blank\" rel=\"noreferrer\">\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        endIcon={<SendIcon />}\r\n                      >\r\n                        HomePage\r\n                      </Button>\r\n                    </Stack>\r\n                  </a>\r\n                </ReleaseContainer>\r\n                <Explanation>\r\n                  <OverviewBox>\r\n                    <Overview>\r\n                      <span>{info?.overview}</span>\r\n                    </Overview>\r\n                  </OverviewBox>\r\n                  <Wrapper>\r\n                    <WrapperColor>\r\n                      <GenresContainer>\r\n                        {info?.genres.slice(0, 3).map((genres, index) => {\r\n                          return <span key={index}>&nbsp;{genres.name} /</span>;\r\n                        })}\r\n                      </GenresContainer>\r\n                      <Companies>\r\n                        {info?.production_companies\r\n                          .slice(0, 2)\r\n                          .map((companies, index) => {\r\n                            return (\r\n                              <LogoPath\r\n                                key={index}\r\n                                bgimg={makeImagePath(companies.logo_path || \"\")}\r\n                              ></LogoPath>\r\n                            );\r\n                          })}\r\n                      </Companies>\r\n                    </WrapperColor>\r\n                  </Wrapper>\r\n                </Explanation>\r\n                <SemiContainer>\r\n                  <SemiHeader>\r\n                    <span>비슷한 콘텐츠</span>\r\n                  </SemiHeader>\r\n                  <SemiBox>\r\n                    {similar?.results.slice(0, 6).map((movie, index) => {\r\n                      return (\r\n                        <Similar\r\n                          key={index}\r\n                          whileHover={{ scale: 1.1 }}\r\n                          bgimg={makeImagePath(movie.backdrop_path || \"\")}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </SemiBox>\r\n                </SemiContainer>\r\n              </OverviewContainer>\r\n            </DetailPoster>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomeDetail;\r\n","import { motion } from \"framer-motion\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getUpcoming, IGetMoviesResult } from \"../../Api/api\";\r\nimport { makeImagePath, NothingPoster } from \"../../Api/utils\";\r\nimport Loading from \"../../Styles/Loading\";\r\nimport { Info, infoVars, Span1 } from \"./Home\";\r\nimport ArrowCircleRightIcon from \"@mui/icons-material/ArrowCircleRight\";\r\n\r\nconst UpcomingContainer = styled.div`\r\n  width: 100%;\r\n  height: 450px;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst UpcomingTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 98%;\r\n  height: 400px;\r\n  display: grid;\r\n  grid-template-columns: repeat(20, 300px);\r\n  align-items: center;\r\n  margin-left: 2%;\r\n  gap: 3px;\r\n  position: absolute;\r\n  overflow-y: hidden;\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n    height: 10px;\r\n    border-radius: 50px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: linear-gradient(#e0eafc, #cfdef3);\r\n    border-radius: 50px;\r\n  }\r\n`;\r\n\r\nconst Box = styled(motion.div)`\r\n  width: 300px;\r\n  height: 400px;\r\n  transform-origin: bottom;\r\n`;\r\n\r\nconst UpcomingBox = styled(motion.div)<{ bgimg: string }>`\r\n  width: 300px;\r\n  height: 400px;\r\n  background-image: url(${(prop) => prop.bgimg});\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst UpcomingSlider = () => {\r\n  const { isLoading, data } = useQuery<IGetMoviesResult>(\"Upcoming\", () =>\r\n    getUpcoming(1)\r\n  );\r\n  return (\r\n    <>\r\n      <UpcomingTitle>\r\n        <Link to=\"/upcoming\">\r\n          <Span1>Charleyflix 상영 예정</Span1>\r\n        </Link>\r\n        <Link to=\"/upcoming\">\r\n          <ArrowCircleRightIcon fontSize=\"large\" />\r\n        </Link>\r\n      </UpcomingTitle>\r\n      <UpcomingContainer>\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            <Container>\r\n              {data?.results.map((upcoming, index) => {\r\n                return (\r\n                  <Box key={index} whileHover={{ scale: 1.05 }}>\r\n                    <Link to={`/upcoming/${upcoming.id}`}>\r\n                      <UpcomingBox\r\n                        bgimg={\r\n                          upcoming.backdrop_path === null\r\n                            ? NothingPoster\r\n                            : makeImagePath(upcoming.backdrop_path)\r\n                        }\r\n                      >\r\n                        <Info variants={infoVars}>\r\n                          <h4>{upcoming.title}</h4>\r\n                        </Info>\r\n                      </UpcomingBox>\r\n                    </Link>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Container>\r\n          </>\r\n        )}\r\n      </UpcomingContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpcomingSlider;\r\n","import { motion } from \"framer-motion\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getTv, IGetTVResult } from \"../../Api/api\";\r\nimport { makeImagePath, NothingPoster } from \"../../Api/utils\";\r\nimport Loading from \"../../Styles/Loading\";\r\nimport { Info, infoVars, Span1 } from \"./Home\";\r\nimport ArrowCircleRightIcon from \"@mui/icons-material/ArrowCircleRight\";\r\n\r\nconst UpcomingContainer = styled.div`\r\n  width: 100%;\r\n  height: 450px;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst UpcomingTitle = styled.div`\r\n  width: 40%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 98%;\r\n  height: 400px;\r\n  display: grid;\r\n  grid-template-columns: repeat(18, 300px);\r\n  align-items: center;\r\n  margin-left: 2%;\r\n  gap: 3px;\r\n  position: absolute;\r\n  overflow-y: hidden;\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n    height: 10px;\r\n    border-radius: 50px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: linear-gradient(#e0eafc, #cfdef3);\r\n    border-radius: 50px;\r\n  }\r\n`;\r\n\r\nconst Box = styled(motion.div)`\r\n  width: 300px;\r\n  height: 400px;\r\n`;\r\n\r\nconst UpcomingBox = styled(motion.div)<{ bgimg: string }>`\r\n  width: 300px;\r\n  height: 400px;\r\n  background-image: url(${(prop) => prop.bgimg});\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst TVSlider = () => {\r\n  const { isLoading, data } = useQuery<IGetTVResult>(\"TV\", () => getTv(1));\r\n  return (\r\n    <>\r\n      <UpcomingTitle>\r\n        <Link to=\"/tv\">\r\n          <Span1>Charleyflix TV 프로그램</Span1>\r\n        </Link>\r\n        <Link to=\"/tv\">\r\n          <ArrowCircleRightIcon fontSize=\"large\" />\r\n        </Link>\r\n      </UpcomingTitle>\r\n      <UpcomingContainer>\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            <Container>\r\n              {data?.results.slice(2, 20).map((tv, index) => {\r\n                return (\r\n                  <Box key={index} whileHover={{ scale: 1.05 }}>\r\n                    <Link to={`/tv/${tv.id}`}>\r\n                      <UpcomingBox\r\n                        bgimg={\r\n                          tv.backdrop_path === null\r\n                            ? NothingPoster\r\n                            : makeImagePath(tv.backdrop_path)\r\n                        }\r\n                      >\r\n                        <Info variants={infoVars}>\r\n                          <h4>{tv.original_name}</h4>\r\n                        </Info>\r\n                      </UpcomingBox>\r\n                    </Link>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Container>\r\n          </>\r\n        )}\r\n      </UpcomingContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TVSlider;\r\n","import { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\r\nimport { useCallback, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useMatch, useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getMovies,\r\n  getMoviesTrailer,\r\n  IGetMoviesResult,\r\n  IGetMoviesTrailer,\r\n} from \"../../Api/api\";\r\nimport { makeImagePath, makeTrailerPath, NothingPoster } from \"../../Api/utils\";\r\nimport { isSoundAtom, SoundEnums } from \"../../Recoil/Atom\";\r\nimport Loading from \"../../Styles/Loading\";\r\nimport HometoDetail from \"../Detail/HomeDetail\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport UpcomingSlider from \"./UpcomingSlider\";\r\nimport TVSlider from \"./TVSlider\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  min-width: 1400px;\r\n  height: 100vh;\r\n  height: 80vh;\r\n`;\r\n\r\nconst PlayContainer = styled.div`\r\n  min-width: 100%;\r\n  height: 80vh;\r\n  background-color: black;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Banner = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  bottom: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  color: white;\r\n  position: absolute;\r\n`;\r\n\r\nexport const SliderContainer = styled(motion.div)`\r\n  height: 500px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const SliderControl = styled(motion.div)`\r\n  width: 92%;\r\n  height: 50px;\r\n  display: flex;\r\n  color: white;\r\n  margin-bottom: 5px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Span1 = styled(motion.span)`\r\n  color: white;\r\n  z-index: 30;\r\n  font-size: 30px;\r\n  margin-left: 40px;\r\n  margin-right: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst PlayBtn = styled(motion.button)`\r\n  font-size: 15px;\r\n  height: 30px;\r\n  border-radius: 5px;\r\n  font-weight: 600;\r\n  border: none;\r\n  outline: none;\r\n  z-index: 10;\r\n`;\r\n\r\nconst PageChange = styled.div`\r\n  width: 100%;\r\n  height: 400px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: absolute;\r\n`;\r\n\r\nexport const Increase = styled(motion.div)`\r\n  width: 50px;\r\n  height: 400px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 3;\r\n  transform-origin: center right;\r\n`;\r\n\r\nexport const Decrease = styled(motion.div)`\r\n  width: 50px;\r\n  height: 400px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0.7;\r\n`;\r\n\r\nexport const Slider = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 3px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 97%;\r\n  opacity: 0.9;\r\n`;\r\n\r\nexport const Box = styled(motion.div)<{ bgimg: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgimg});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n  font-size: 66px;\r\n  position: relative;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nexport const Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: black;\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled(motion.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 100;\r\n`;\r\n\r\nexport const BoxDetail = styled(motion.div)`\r\n  width: 50%;\r\n  height: 80vh;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  z-index: 200;\r\n`;\r\n\r\nexport const DetailContainer = styled(motion.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n    border-radius: 50px;\r\n    background: black;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: linear-gradient(#e0eafc, #cfdef3);\r\n    border-radius: 50px;\r\n  }\r\n  border-radius: 50px 0 0 50px;\r\n`;\r\n\r\nexport const MovieCover = styled(motion.div)<{ bgimg?: string }>`\r\n  width: 100%;\r\n  height: 50%;\r\n  background-image: url(${(props) => props.bgimg});\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const rowVars = {\r\n  hidden: (back: boolean) => ({\r\n    x: back ? -window.outerWidth - 10 : window.outerWidth + 10,\r\n  }),\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (back: boolean) => ({\r\n    x: back ? window.outerWidth + 10 : -window.outerWidth - 10,\r\n  }),\r\n};\r\n\r\nexport const boxVars = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    zIndex: 2000,\r\n    scale: 1.1,\r\n    y: -40,\r\n    transition: {\r\n      delay: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const infoVars = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const movieMatch = useMatch(`/movies/:movieId`);\r\n  const { scrollY } = useViewportScroll();\r\n  const stateMovieId = localStorage.getItem(\"movieId\");\r\n  const { isLoading: infoLoading, data: info } = useQuery<IGetMoviesResult>(\r\n    \"nowPlaying\",\r\n    getMovies\r\n  );\r\n  const { data: trailer } = useQuery<IGetMoviesTrailer>(\"startTrailer\", () =>\r\n    getMoviesTrailer(String(stateMovieId))\r\n  );\r\n  const [index, setIndex] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const [isBack, setIsBack] = useState(false);\r\n  const [isVolum, setIsVolum] = useState(false);\r\n  const [isSound, setIsSound] = useRecoilState<SoundEnums>(isSoundAtom);\r\n  const { OFF, ON } = SoundEnums;\r\n  const handleChangeSound = useCallback((): void => {\r\n    if (isSound === OFF) {\r\n      localStorage.setItem(\"sound\", ON);\r\n      setIsSound(ON);\r\n      return;\r\n    }\r\n    localStorage.setItem(\"sound\", OFF);\r\n    setIsSound(OFF);\r\n  }, [OFF, ON, isSound, setIsSound]);\r\n  let sliceF = 6;\r\n  const increaseIndex = () => {\r\n    if (info) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      setIsBack(false);\r\n      const totalMovies = info?.results.length;\r\n      const sliderPrev = Math.floor(totalMovies / sliceF) - 1;\r\n      setIndex((prev) => (prev === sliderPrev ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const decreaseIndex = () => {\r\n    if (info) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      setIsBack(true);\r\n      const totalMovies = info?.results.length - 1;\r\n      const sliderPrev = Math.floor(totalMovies / sliceF) - 1;\r\n      setIndex((prev) => (prev === 0 ? sliderPrev : prev - 1));\r\n    }\r\n  };\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n  const onClickBox = (movieId: number) => {\r\n    navigate(`/movies/${movieId}`);\r\n    setIsVolum(true);\r\n  };\r\n  const onClickOverlay = () => {\r\n    navigate(\"/movies\");\r\n    setIsVolum(false);\r\n  };\r\n  const clickMovie =\r\n    movieMatch?.params.movieId &&\r\n    info?.results.find(\r\n      (movie) => String(movie.id) === movieMatch?.params.movieId\r\n    );\r\n  return (\r\n    <Wrapper>\r\n      {infoLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <PlayContainer>\r\n            <ReactPlayer\r\n              url={makeTrailerPath(trailer?.results[0].key || \"\")}\r\n              volume={isVolum ? 0 : 0.3}\r\n              controls={false}\r\n              playing={true}\r\n              muted={isSound === \"0\" ? true : false}\r\n              loop={true}\r\n              width=\"200vw\"\r\n              height=\"calc(110vh)\"\r\n            ></ReactPlayer>\r\n          </PlayContainer>\r\n          <Banner />\r\n          <SliderContainer>\r\n            <SliderControl>\r\n              <Span1>Charleyflix 인기 콘텐츠</Span1>\r\n              <PlayBtn onClick={handleChangeSound}>\r\n                <span>{isSound === \"0\" ? \"Sound On\" : \"Sound Off\"}</span>\r\n              </PlayBtn>\r\n            </SliderControl>\r\n            <Slider>\r\n              <PageChange>\r\n                <Decrease whileHover={{ scale: 1.2 }} onClick={decreaseIndex}>\r\n                  <ArrowBackIosIcon fontSize=\"large\" />\r\n                </Decrease>\r\n                <Increase whileHover={{ scale: 1.2 }} onClick={increaseIndex}>\r\n                  <ArrowForwardIosIcon fontSize=\"large\" />\r\n                </Increase>\r\n              </PageChange>\r\n              <AnimatePresence\r\n                custom={isBack}\r\n                initial={false}\r\n                onExitComplete={toggleLeaving}\r\n              >\r\n                <Row\r\n                  custom={isBack}\r\n                  variants={rowVars}\r\n                  initial=\"hidden\"\r\n                  animate=\"visible\"\r\n                  exit=\"exit\"\r\n                  transition={{ type: \"tween\", duration: 1 }}\r\n                  key={index}\r\n                >\r\n                  {info?.results\r\n                    ?.slice(index * sliceF + 1, index * sliceF + sliceF + 1)\r\n                    .map((movie, index) => {\r\n                      return (\r\n                        <Box\r\n                          layoutId={movie.id + \"\"}\r\n                          onClick={() => onClickBox(movie.id)}\r\n                          key={index}\r\n                          whileHover=\"hover\"\r\n                          initial=\"normal\"\r\n                          variants={boxVars}\r\n                          transition={{ type: \"tween\" }}\r\n                          bgimg={\r\n                            movie.backdrop_path === null\r\n                              ? NothingPoster\r\n                              : makeImagePath(movie.backdrop_path)\r\n                          }\r\n                        >\r\n                          <Info variants={infoVars}>\r\n                            <h4>{movie.title}</h4>\r\n                          </Info>\r\n                        </Box>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </AnimatePresence>\r\n            </Slider>\r\n          </SliderContainer>\r\n          <UpcomingSlider />\r\n          <TVSlider />\r\n          <AnimatePresence>\r\n            {movieMatch && (\r\n              <>\r\n                <Overlay onClick={onClickOverlay} />\r\n                <BoxDetail\r\n                  layoutId={movieMatch?.params.movieId}\r\n                  style={{ top: scrollY.get() + 100 }}\r\n                >\r\n                  {clickMovie && (\r\n                    <DetailContainer>\r\n                      <HometoDetail />\r\n                    </DetailContainer>\r\n                  )}\r\n                </BoxDetail>\r\n              </>\r\n            )}\r\n          </AnimatePresence>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { atom } from \"recoil\";\r\nimport { recoilPersist } from \"recoil-persist\";\r\nconst { persistAtom } = recoilPersist();\r\n\r\nexport enum SoundEnums {\r\n  OFF = \"0\",\r\n  ON = \"1\",\r\n}\r\n\r\nconst { OFF, ON } = SoundEnums;\r\n\r\nexport const getSound = (): SoundEnums => {\r\n  const sound = localStorage.getItem(\"sound\");\r\n  if (sound === OFF) {\r\n    return OFF;\r\n  }\r\n  return ON;\r\n};\r\n\r\nexport const isSoundAtom = atom<SoundEnums>({\r\n  key: \"soundMode\",\r\n  default: getSound(),\r\n});\r\n\r\nexport const gitID = atom({\r\n  key: \"GIT\",\r\n  default: \"\",\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n","import styled from \"styled-components\";\r\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst NetflixLogo = styled(motion.svg)`\r\n  width: 120px;\r\n  height: 60px;\r\n  path {\r\n    stroke: white;\r\n    stroke-width: 0.5;\r\n  }\r\n`;\r\n\r\nconst logoVars = {\r\n  start: { pathLength: 0, fill: \"rgba(255, 255, 255, 0)\" },\r\n  end: {\r\n    fill: \"rgba(255, 0, 0, 1)\",\r\n    pathLength: 1,\r\n  },\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 86px;\r\n  background-color: black;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 95%;\r\n  height: 60px;\r\n  background-color: black;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Back = () => {\r\n  const navigate = useNavigate();\r\n  const onClick = () => {\r\n    navigate(-1);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Link to=\"/\">\r\n          <NetflixLogo\r\n            whileHover={{ scale: 1.1 }}\r\n            viewBox=\"0 0 111 30\"\r\n            focusable=\"false\"\r\n          >\r\n            <g id=\"netflix-logo\">\r\n              <motion.path\r\n                variants={logoVars}\r\n                initial=\"start\"\r\n                animate=\"end\"\r\n                transition={{ repeat: Infinity, duration: 7 }}\r\n                d=\"M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z\"\r\n              ></motion.path>\r\n            </g>\r\n          </NetflixLogo>\r\n        </Link>\r\n        <KeyboardBackspaceIcon\r\n          onClick={onClick}\r\n          style={{ width: \"50px\", height: \"50px\", cursor: \"pointer\" }}\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Back;\r\n","import styled from \"styled-components\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Back from \"./Back\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 86px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: black;\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <Back />\r\n      <Container>\r\n        <Box>\r\n          <CircularProgress />\r\n        </Box>\r\n        Loading...\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n"],"names":["API_KEY","process","BASE_URL","getMovies","fetch","response","json","getMoviesDetail","movieId","getMoviesTrailer","getUpcoming","number","getTv","getTVDetail","tvId","getTvTrailer","getSearch","query","getMovieSimilar","makeImagePath","id","makeTrailerPath","key","NothingPoster","Container","styled","motion","DetailPoster","DetailPlayContainer","Banner","BannerBackContainer","BannerBackBox","BannerBack","BannerFooterBox","BannerFooter","BannerPlayBtn","BannerVolum","DetailBanner","props","bgimg","OverviewContainer","TitleContainer","Title","Explanation","OverviewBox","Overview","ReleaseContainer","Wrapper","WrapperColor","GenresContainer","Companies","LogoPath","prop","SemiContainer","SemiHeader","SemiBox","Similar","movieMatch","useMatch","navigate","useNavigate","useState","volum","setVolum","useQuery","params","isLoading","data","info","similar","Loading","url","results","volume","playing","loop","width","height","style","scale","onClick","whileHover","rotate","Cancel","fontSize","alert","DoubleArrow","prev","VolumeUp","VolumeOff","backdrop_path","original_title","release_date","Stack","spacing","Rating","name","defaultValue","undefined","vote_average","Math","floor","Number","precision","readOnly","size","runtime","spoken_languages","color","adult","href","homepage","target","rel","direction","Button","variant","endIcon","Send","overview","genres","slice","map","index","production_companies","companies","logo_path","movie","UpcomingContainer","UpcomingTitle","Box","UpcomingBox","to","Span1","ArrowCircleRight","upcoming","Info","variants","infoVars","title","tv","original_name","PlayContainer","SliderContainer","SliderControl","PlayBtn","PageChange","Increase","Decrease","Slider","Row","Overlay","BoxDetail","DetailContainer","MovieCover","rowVars","hidden","back","x","window","outerWidth","visible","exit","boxVars","normal","hover","zIndex","y","transition","delay","type","opacity","duaration","scrollY","useViewportScroll","stateMovieId","localStorage","getItem","infoLoading","trailer","String","setIndex","leaving","setLeaving","isBack","setIsBack","isVolum","setIsVolum","useRecoilState","isSoundAtom","isSound","setIsSound","OFF","SoundEnums","ON","handleChangeSound","useCallback","setItem","toggleLeaving","clickMovie","find","controls","muted","totalMovies","length","sliderPrev","ArrowBackIos","ArrowForwardIos","AnimatePresence","custom","initial","onExitComplete","animate","duration","layoutId","top","get","persistAtom","recoilPersist","atom","default","gitID","effects_UNSTABLE","NetflixLogo","logoVars","start","pathLength","fill","end","viewBox","focusable","repeat","Infinity","d","cursor"],"sourceRoot":""}