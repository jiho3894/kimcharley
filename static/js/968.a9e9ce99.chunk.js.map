{"version":3,"file":"static/js/968.a9e9ce99.chunk.js","mappings":"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","sources":["Components/Home/Login.tsx","Recoil/Atom.ts"],"sourcesContent":["import React from \"react\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { gitID } from \"../../Recoil/Atom\";\r\n\r\ntype Inputs = {\r\n  Email: string;\r\n  Password: string;\r\n  Password2: string;\r\n  NickName?: string;\r\n};\r\n\r\nconst Form = styled.form`\r\n  margin: auto 0;\r\n  width: 400px;\r\n  height: 400px;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst Back = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  position: absolute;\r\n  top: 2px;\r\n  right: 2px;\r\n  background-color: red;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n\r\nconst LogoBox = styled.div`\r\n  width: 15rem;\r\n  height: 80px;\r\n  margin: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  span {\r\n    font-size: 40px;\r\n    font-weight: 600;\r\n  }\r\n  a {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  width: 90%;\r\n  height: 40px;\r\n  margin: 10px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  color: black;\r\n  line-height: 60px;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  word-break: keep-all;\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(\"https://assets.nflxext.com/ffe/siteui/vlv3/9737377e-a430-4d13-ad6c-874c54837c49/945eec79-6856-4d95-b4c6-83ff5292f33d/KR-ko-20220111-popsignuptwoweeks-perspective_alpha_website_large.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MainOpacity = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: absolute;\r\n\r\n  background: linear-gradient(\r\n    rgba(0, 0, 0, 0.6),\r\n    rgba(255, 255, 255, 0),\r\n    rgba(0, 0, 0, 0.6)\r\n  );\r\n`;\r\n\r\nconst Login = () => {\r\n  const Navigate = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setError,\r\n  } = useForm<Inputs>();\r\n  const setID = useSetRecoilState(gitID);\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\r\n    if (data.Password !== data.Password2) {\r\n      setError(\"Password\", { message: \"not same\" }, { shouldFocus: true });\r\n      return;\r\n    }\r\n    alert(\"로그인 성공\");\r\n    setID(data.NickName);\r\n    Navigate(-1);\r\n  };\r\n  return (\r\n    <Body>\r\n      <MainContainer>\r\n        <MainOpacity />\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Link to=\"/\">\r\n            <Back>\r\n              <ArrowBackIcon />\r\n            </Back>\r\n          </Link>\r\n          <LogoBox>\r\n            <span>\r\n              <a href=\"https://github.com/jiho3894/kimcharley\">Charleyflix</a>\r\n            </span>\r\n          </LogoBox>\r\n          <InputBox>\r\n            <TextField\r\n              label=\"Email\"\r\n              variant=\"standard\"\r\n              placeholder=\"Email\"\r\n              autoFocus\r\n              required\r\n              {...register(\"Email\", {\r\n                pattern: {\r\n                  value: /^[A-Za-z0-9._%+-]/g,\r\n                  message: \"email pattern\",\r\n                },\r\n              })}\r\n            />\r\n            <Span>{errors?.Email?.message}</Span>\r\n          </InputBox>\r\n          <InputBox>\r\n            <TextField\r\n              id=\"standard-password-input\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              variant=\"standard\"\r\n              autoComplete=\"off\"\r\n              {...register(\"Password\", {\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[A-Za-z0-9._%+-]/g,\r\n                  message: \"not pattern\",\r\n                },\r\n              })}\r\n            />\r\n            <Span>{errors?.Password?.message}</Span>\r\n          </InputBox>\r\n          <InputBox>\r\n            <TextField\r\n              id=\"standard-password-input\"\r\n              label=\"Try Password\"\r\n              type=\"password\"\r\n              variant=\"standard\"\r\n              autoComplete=\"off\"\r\n              {...register(\"Password2\", {\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[A-Za-z0-9._%+-]/g,\r\n                  message: \"error\",\r\n                },\r\n              })}\r\n            />\r\n            <Span>{errors?.Password2?.message}</Span>\r\n          </InputBox>\r\n          <InputBox>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Github ID\"\r\n              variant=\"standard\"\r\n              required\r\n              {...register(\"NickName\", {\r\n                required: true,\r\n                minLength: {\r\n                  value: 3,\r\n                  message: \"minLength 3\",\r\n                },\r\n                pattern: {\r\n                  value: /^[A-Za-z0-9._%+-]/g,\r\n                  message: \"pattern error\",\r\n                },\r\n                validate: (value) =>\r\n                  value?.includes(\"Jiho3894\") ? \"allow Jiho\" : true,\r\n              })}\r\n            />\r\n            <Span>{errors?.NickName?.message}</Span>\r\n          </InputBox>\r\n          {/* <Button variant=\"contained\">Submit</Button> */}\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </MainContainer>\r\n    </Body>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { atom } from \"recoil\";\r\nimport { recoilPersist } from \"recoil-persist\";\r\nconst { persistAtom } = recoilPersist();\r\n\r\nexport enum SoundEnums {\r\n  OFF = \"0\",\r\n  ON = \"1\",\r\n}\r\n\r\nconst { OFF, ON } = SoundEnums;\r\n\r\nexport const getSound = (): SoundEnums => {\r\n  const sound = localStorage.getItem(\"sound\");\r\n  if (sound === OFF) {\r\n    return OFF;\r\n  }\r\n  return ON;\r\n};\r\n\r\nexport const isSoundAtom = atom<SoundEnums>({\r\n  key: \"soundMode\",\r\n  default: getSound(),\r\n});\r\n\r\nexport const gitID = atom({\r\n  key: \"GIT\",\r\n  default: \"\",\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n"],"names":["Form","styled","Back","LogoBox","InputBox","Span","Body","MainContainer","MainOpacity","Navigate","useNavigate","useForm","register","handleSubmit","errors","formState","setError","setID","useSetRecoilState","gitID","onSubmit","data","Password","Password2","alert","NickName","message","shouldFocus","to","href","label","variant","placeholder","autoFocus","required","pattern","value","Email","id","type","autoComplete","minLength","validate","includes","SoundEnums","persistAtom","recoilPersist","OFF","ON","isSoundAtom","atom","key","default","localStorage","getItem","effects_UNSTABLE"],"sourceRoot":""}